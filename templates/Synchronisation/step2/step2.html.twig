{% extends 'base.html.twig' %}

{% block title %}Étape 2 {% endblock %}

{% block body %}
 <table class="table" id="table">
  <thead class="thead-dark">
    <tr>
      <th scope="col">Nom de la playlist</th>

    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">1</th>
      <td>
        {# {% for playlist in playlist %} #}


      </td>
      {# <td>{{ playlist.track }}</td> #}
      <td>durée de la musique</td>
    </tr>
    <tr>
      <th scope="row">2</th>
      <td>Artiste</td>
      <td>Nom de la musique</td>
      <td>durée de la musique</td>
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>Artiste</td>
      <td>Nom de la musique</td>
      <td>durée de la musique</td>
    </tr>
  </tbody>
  {# {% endfor %} #}
</table> #}
{% endblock %}
{% block js %}

{{parent()}}

<script>
  // Helper Function to Extract Access Token for URL
  $(document).ready(function () {
    const getUrlParameter = (sParam) => {
      let sPageURL = window.location.search.substring(1),////substring will take everything after the https link and split the #/&
        sURLVariables = sPageURL != undefined && sPageURL.length > 0 ? sPageURL.split('#') : [],
        sParameterName,
        i;
      let split_str = window.location.href.length > 0 ? window.location.href.split('#') : [];
      sURLVariables = split_str != undefined && split_str.length > 1 && split_str[1].length > 0 ? split_str[1].split('&') : [];
      for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');
        if (sParameterName[0] === sParam) {
          return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
        }
      }
    };

    /*function getTracks(playlist_id){
      let access_token = getUrlParameter('access_token');
      const redirect = `localhost:8000/step3?access_token=${access_token}&playlist_id=${playlist_id}`;
    } */

    // Get Access Token
    const accessToken = getUrlParameter('access_token');
    /*const playlist_id = getUrlParameter('playlist_id');
    $.ajax({
      url: `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`,
      type: 'GET',
      dataType: 'json',
      headers: {
        'Authorization': 'Bearer ' + accessToken
      },
      success: function (data) {
        console.log(data);
        var html = ``;
        for (playlist of data.items) {
          html += `
              <tr> 
                <td>${playlist.name}</td>
                <td>${playlist.tracks.href}</td>
                <td>${playlist.id}</td>
              </tr>
       `

        }

        $(`#table tbody`).html(html);
      }

    }); // End of Spotify ajax call*/

    // Make Spotify API call
    // Note: We are using the track API endpoint.
    $.ajax({
      url: `https://api.spotify.com/v1/me/playlists`,
      type: 'GET',
      dataType: 'json',
      headers: {
        'Authorization': 'Bearer ' + accessToken
      },
      success: function (data) {
        console.log(data);
        var html = ``;
        for (playlist of data.items) {
          html += `
              <tr> 
                <td>${playlist.name}</td>
                <td>${playlist.tracks.href}</td>
                <td>${playlist.id}</td>
              </tr>
       `

        }

        $(`#table tbody`).html(html);
      }

    }); // End of Spotify ajax call
  }); // End of document.ready

</script>
{% endblock %}